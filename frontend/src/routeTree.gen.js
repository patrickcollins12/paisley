/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root.jsx'
import { Route as IndexImport } from './routes/index.jsx'
import { Route as VisualizeIndexImport } from './routes/visualize.index.jsx'
import { Route as TransactionsIndexImport } from './routes/transactions.index.jsx'
import { Route as TagsIndexImport } from './routes/tags.index.jsx'
import { Route as SettingsIndexImport } from './routes/settings.index.jsx'
import { Route as RulesIndexImport } from './routes/rules.index.jsx'
import { Route as LoginIndexImport } from './routes/login.index.jsx'
import { Route as AccountsIndexImport } from './routes/accounts.index.jsx'
import { Route as RulesRuleIdImport } from './routes/rules.$ruleId.jsx'
import { Route as AccounteditAccountIdImport } from './routes/account_edit.$accountId.jsx'
import { Route as AccountAccountIdImport } from './routes/account.$accountId.jsx'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
})

const VisualizeIndexRoute = VisualizeIndexImport.update({
  id: '/visualize/',
  path: '/visualize/',
  getParentRoute: () => rootRoute,
})

const TransactionsIndexRoute = TransactionsIndexImport.update({
  id: '/transactions/',
  path: '/transactions/',
  getParentRoute: () => rootRoute,
})

const TagsIndexRoute = TagsIndexImport.update({
  id: '/tags/',
  path: '/tags/',
  getParentRoute: () => rootRoute,
})

const SettingsIndexRoute = SettingsIndexImport.update({
  id: '/settings/',
  path: '/settings/',
  getParentRoute: () => rootRoute,
})

const RulesIndexRoute = RulesIndexImport.update({
  id: '/rules/',
  path: '/rules/',
  getParentRoute: () => rootRoute,
})

const LoginIndexRoute = LoginIndexImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => rootRoute,
})

const AccountsIndexRoute = AccountsIndexImport.update({
  id: '/accounts/',
  path: '/accounts/',
  getParentRoute: () => rootRoute,
})

const RulesRuleIdRoute = RulesRuleIdImport.update({
  id: '/rules/$ruleId',
  path: '/rules/$ruleId',
  getParentRoute: () => rootRoute,
})

const AccounteditAccountIdRoute = AccounteditAccountIdImport.update({
  id: '/account_edit/$accountId',
  path: '/account_edit/$accountId',
  getParentRoute: () => rootRoute,
})

const AccountAccountIdRoute = AccountAccountIdImport.update({
  id: '/account/$accountId',
  path: '/account/$accountId',
  getParentRoute: () => rootRoute,
})

// Create and export the route tree

const rootRouteChildren = {
  IndexRoute: IndexRoute,
  AccountAccountIdRoute: AccountAccountIdRoute,
  AccounteditAccountIdRoute: AccounteditAccountIdRoute,
  RulesRuleIdRoute: RulesRuleIdRoute,
  AccountsIndexRoute: AccountsIndexRoute,
  LoginIndexRoute: LoginIndexRoute,
  RulesIndexRoute: RulesIndexRoute,
  SettingsIndexRoute: SettingsIndexRoute,
  TagsIndexRoute: TagsIndexRoute,
  TransactionsIndexRoute: TransactionsIndexRoute,
  VisualizeIndexRoute: VisualizeIndexRoute,
}

export const routeTree = rootRoute._addFileChildren(rootRouteChildren)

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.jsx",
      "children": [
        "/",
        "/account/$accountId",
        "/account_edit/$accountId",
        "/rules/$ruleId",
        "/accounts/",
        "/login/",
        "/rules/",
        "/settings/",
        "/tags/",
        "/transactions/",
        "/visualize/"
      ]
    },
    "/": {
      "filePath": "index.jsx"
    },
    "/account/$accountId": {
      "filePath": "account.$accountId.jsx"
    },
    "/account_edit/$accountId": {
      "filePath": "account_edit.$accountId.jsx"
    },
    "/rules/$ruleId": {
      "filePath": "rules.$ruleId.jsx"
    },
    "/accounts/": {
      "filePath": "accounts.index.jsx"
    },
    "/login/": {
      "filePath": "login.index.jsx"
    },
    "/rules/": {
      "filePath": "rules.index.jsx"
    },
    "/settings/": {
      "filePath": "settings.index.jsx"
    },
    "/tags/": {
      "filePath": "tags.index.jsx"
    },
    "/transactions/": {
      "filePath": "transactions.index.jsx"
    },
    "/visualize/": {
      "filePath": "visualize.index.jsx"
    }
  }
}
ROUTE_MANIFEST_END */
